To achieve 100% code coverage for the LPDRiskSignalApp class, which is the main Spring Boot application starter, we can focus on testing the main method and ensuring that the application context starts as expected. Although the main method usually has limited logic, you can verify that SpringApplication.run is called and the log entry is generated.

Here's a JUnit 5 test class using Mockito:

package com.abnamro.crms.lpdrisksignaladministration;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.MockedStatic;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.test.system.CapturedOutput;
import org.springframework.boot.test.system.OutputCaptureExtension;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;
import lombok.extern.slf4j.Slf4j;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.mockStatic;

@ExtendWith(MockitoExtension.class)
@ExtendWith(OutputCaptureExtension.class)
public class LPDRiskSignalAppTest {

    @InjectMocks
    private LPDRiskSignalApp lpdRiskSignalApp;

    @Test
    public void testMain(CapturedOutput output) {
        // Mock SpringApplication.run to prevent the actual application from starting
        try (MockedStatic<SpringApplication> mockedSpringApplication = mockStatic(SpringApplication.class)) {
            mockedSpringApplication.when(() -> SpringApplication.run(LPDRiskSignalApp.class, new String[]{}))
                                   .thenReturn(null);

            // Call the main method
            LPDRiskSignalApp.main(new String[]{});

            // Verify that SpringApplication.run was called
            mockedSpringApplication.verify(() -> SpringApplication.run(LPDRiskSignalApp.class, new String[]{}));

            // Check the log output to ensure "Starting LPD Application" message is printed
            assertTrue(output.getOut().contains("Starting LPD Application"));
        }
    }
}

Explanation

1. Mockito Static Mocking:

mockStatic(SpringApplication.class) prevents the real Spring Boot application from starting.

Verifies that SpringApplication.run is called with LPDRiskSignalApp.class and an empty String array.



2. Captured Output:

OutputCaptureExtension captures the log output.

Verifies that "Starting LPD Application" is logged, confirming the Log.info message.




This approach ensures that the main method is covered, and both SpringApplication.run and the log message are verified for 100% coverage.

