import com.abnamro.commons.dto.EventDTO;
import com.abnamro.crms.lpdrisksignaladministration.config.ServiceBusConfig;
import com.azure.messaging.servicebus.ServiceBusException;
import com.azure.messaging.servicebus.ServiceBusMessage;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.commons.lang3.exception.ExceptionUtils;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Component;
import jakarta.inject.Named;
import lombok.extern.slf4j.Slf4j;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class LPDTriggerMessageSenderUtilTest {

    @Mock
    private ServiceBusConfig serviceBusConfig;

    @Mock
    private ObjectMapper objectMapper;

    @InjectMocks
    private LPDTriggerMessageSenderUtil lpdTriggerMessageSenderUtil;

    @BeforeEach
    void setUp() {
        when(serviceBusConfig.getSenderClient()).thenReturn(mock(ServiceBusSenderClient.class));
    }

    @Test
    void testConvertAndSendToRsdQueue() throws JsonProcessingException, ServiceBusException {
        EventDTO eventDTO = new EventDTO();
        String message = "test message";

        when(objectMapper.writeValueAsString(eventDTO)).thenReturn(message);

        lpdTriggerMessageSenderUtil.convertAndSendToRsdQueue(eventDTO);

        verify(serviceBusConfig.getSenderClient(), times(1)).sendMessage(any(ServiceBusMessage.class));
    }

    @Test
    void testConvertAndSendToRsdQueue_Exception() throws JsonProcessingException, ServiceBusException {
        EventDTO eventDTO = new EventDTO();

        when(objectMapper.writeValueAsString(eventDTO)).thenThrow(new JsonProcessingException("Test Exception") {});

        lpdTriggerMessageSenderUtil.convertAndSendToRsdQueue(eventDTO);

        verify(serviceBusConfig.getSenderClient(), never()).sendMessage(any(ServiceBusMessage.class));
    }
}
