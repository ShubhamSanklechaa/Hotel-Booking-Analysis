package com.abnamro.crms.lpdrisksignaladministration.dto;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Objects;

import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(MockitoExtension.class)
public class LPDEventTest {

    @InjectMocks
    private LPDEvent lpdEvent;

    @BeforeEach
    void setUp() {
        lpdEvent = new LPDEvent();
        lpdEvent.setSubjectId("subject123");
        lpdEvent.setSubjectContext("context123");
        lpdEvent.setEventCode("event123");
    }

    @Test
    void testGetSubjectId() {
        assertEquals("subject123", lpdEvent.getSubjectId());
    }

    @Test
    void testSetSubjectId() {
        lpdEvent.setSubjectId("subject456");
        assertEquals("subject456", lpdEvent.getSubjectId());
    }

    @Test
    void testGetSubjectContext() {
        assertEquals("context123", lpdEvent.getSubjectContext());
    }

    @Test
    void testSetSubjectContext() {
        lpdEvent.setSubjectContext("context456");
        assertEquals("context456", lpdEvent.getSubjectContext());
    }

    @Test
    void testGetEventCode() {
        assertEquals("event123", lpdEvent.getEventCode());
    }

    @Test
    void testSetEventCode() {
        lpdEvent.setEventCode("event456");
        assertEquals("event456", lpdEvent.getEventCode());
    }

    @Test
    void testEquals() {
        LPDEvent anotherEvent = new LPDEvent();
        anotherEvent.setSubjectId("subject123");
        anotherEvent.setSubjectContext("context123");
        anotherEvent.setEventCode("event123");

        assertTrue(lpdEvent.equals(anotherEvent));
        assertFalse(lpdEvent.equals(null));
        assertFalse(lpdEvent.equals(new Object()));
    }

    @Test
    void testHashCode() {
        int expectedHashCode = Objects.hash("subject123", "event123", "context123");
        assertEquals(expectedHashCode, lpdEvent.hashCode());
    }

    @Test
    void testToString() {
        String expected = "LPDEvent(subjectId=subject123, subjectContext=context123, eventCode=event123)";
        assertEquals(expected, lpdEvent.toString());
    }
}
