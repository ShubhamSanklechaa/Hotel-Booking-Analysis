package com.abnamro.crms.lpdrisksignaladministration.model;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

@ExtendWith(MockitoExtension.class)
class CreditFacilityRMTypeTest {

    private CreditFacilityRMType creditFacilityRMType;

    private static final Long CREDIT_FACILITY_RM_TYPE_ID = 1L;
    private static final String FACILITY_ID = "F12345";
    private static final String RISK_MANAGEMENT_TYPE = "High";

    @BeforeEach
    void setup() {
        creditFacilityRMType = new CreditFacilityRMType();
        creditFacilityRMType.setCreditFacilityRMTypeId(CREDIT_FACILITY_RM_TYPE_ID);
        creditFacilityRMType.setFacilityId(FACILITY_ID);
        creditFacilityRMType.setRiskManagementType(RISK_MANAGEMENT_TYPE);
    }

    @Test
    void testGettersAndSetters() {
        assertEquals(CREDIT_FACILITY_RM_TYPE_ID, creditFacilityRMType.getCreditFacilityRMTypeId());
        assertEquals(FACILITY_ID, creditFacilityRMType.getFacilityId());
        assertEquals(RISK_MANAGEMENT_TYPE, creditFacilityRMType.getRiskManagementType());
    }

    @Test
    void testEqualsAndHashCode() {
        CreditFacilityRMType anotherCreditFacilityRMType = new CreditFacilityRMType();
        anotherCreditFacilityRMType.setCreditFacilityRMTypeId(CREDIT_FACILITY_RM_TYPE_ID);
        anotherCreditFacilityRMType.setFacilityId(FACILITY_ID);
        anotherCreditFacilityRMType.setRiskManagementType(RISK_MANAGEMENT_TYPE);

        assertEquals(creditFacilityRMType, anotherCreditFacilityRMType);
        assertEquals(creditFacilityRMType.hashCode(), anotherCreditFacilityRMType.hashCode());
    }

    @Test
    void testToString() {
        String expected = "CreditFacilityRMType(creditFacilityRMTypeId=1, facilityId=F12345, riskManagementType=High)";
        assertEquals(expected, creditFacilityRMType.toString());
    }
}